// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  address  String  @unique
  name     String?
  bio      String?
  twitter  String?
  telegram String?
  discord  String?
  nonce String?

  threads              Thread[]
  comments             Comment[]
  upvotes              Upvote[]
  Reply                Reply[]
  BlockChainCredential BlockChainCredential[]
}

model Thread {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  viewCount Int       @default(0)
  createdAt DateTime  @default(now())
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  comments  Comment[]
  upvotes   Upvote[]

  canvasAction  String
  canvasSession String
  canvasHash    String
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  threadId  Int
  thread    Thread   @relation(fields: [threadId], references: [id])
  upvotes   Upvote[]
  replies   Reply[]

  canvasAction  String
  canvasSession String
  canvasHash    String
}

model Reply {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  commentId Int
  comment   Comment  @relation(fields: [commentId], references: [id])
  upvotes   Upvote[]

  canvasAction  String
  canvasSession String
  canvasHash    String
}

model Upvote {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  commentId Int?
  comment   Comment? @relation(fields: [commentId], references: [id])
  replyId   Int?
  reply     Reply?   @relation(fields: [replyId], references: [id])
  threadId  Int?
  thread    Thread?  @relation(fields: [threadId], references: [id])
  createdAt DateTime @default(now())
}
//siwe
model BlockChainCredential {
  id      Int    @id @default(autoincrement())
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  chain   String
  address String

  @@unique([chain, address])
}
